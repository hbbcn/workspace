
// TODO 自动生成的方法存根

//				int[] a = new int[] { 5, 8, 2, 9, 11, 0, 1, 3, 4, 10, 4 };
//				QuickSort test = new QuickSort();
//				test.sort(a, 0, 10);
//				System.out.println(Arrays.toString(a));
//			}
//			public void sort(int[] a, int i, int j) {
//				
//				int low = i;
//				int high = j;
//				if(i>j) {
//					return;
//				}
//				int pow = a[i];
//				if (j >= i) {
//					while (j >= i) {
//					while (j >= i) {
//						if (a[i] > pow)
//								break;
//							else
//								i++;
//						}
//						while (j >= i) {
//						if (a[j] < pow)
//								break;
//							else
//							j--;
//
//						}
//						int swap = a[j];
//						a[j] = a[i];
//						a[i] = swap;
//						if(j>i){
//							i++;
//							j--;
//						}
//					
//
//					if (a[i] > pow) {
//						int temp = a[i - 1];
//						a[i - 1] = a[low];
//						a[low] = temp;
//					} else {
//					int temp = a[i];
//					a[i] = a[low];
//						a[low] = temp;
//					}
//				}
//
//				
//
//					sort(a, low, i-1);
//
//					sort(a, j+1, high);
//
//				
//
//				
//
//				
//
//			}
//			}
//}

// 对左边进行排序递归算法

package com.sias.exer3;

import java.util.Arrays;
import java.util.*;

public class QuickSort {

	public static void main(String[] args) {

		int[] arr = { 5, 9, 7, 4, 8, 11, 6, 1, 10, 9, 20, 4 };
		
		System.out.println(Arrays.toString(arr));
		sort(arr);
		System.out.println(Arrays.toString(arr));

	}

	public static void sort(int[] a) {
		if (a.length > 0) {
			sort(a, 0, a.length - 1);
		}

	}

	public static void sort(int[] a, int low, int height) {
		int i = low;
		int j = height;
		System.out.println("i = " + i);
		System.out.println("low = " + low);
		System.out.println("j = " + j);
		System.out.println("**************");
		
		if (i > j) {// 放在k之前，防止下标越界
			return;
		}
		int k = a[i];

		while (i < j) {
			while (i < j && a[j] > k) { // 找出小的数
				j--;
			}
			while (i < j && a[i] <= k) { // 找出大的数
				i++;
			}

			if (i < j) {// 交换
				int swap = a[i];
				a[i] = a[j];
				a[j] = swap;
			}

		}
		// 交换K
		k = a[i];
		a[i] = a[low];
		a[low] = k;
		System.out.println("i = " + i);
		System.out.println("low = " + low);
		System.out.println("height = " + height);
		System.out.println("j = " + j);
		System.out.println("**************");

		// 对左边进行排序,递归算法

		sort(a, low, i - 1);

//		System.out.println("height = " + height );
		// 对右边进行排序
		sort(a, i + 1, height);

	}
}
