1.程序（program)是为了完成特定的任务、用某种语言编写的一组指令的集合。既指一段静态的代码，静态对象。
                          2.进程（process）是程序的一次执行过程，或是正在运行的一个程序。是一个动态的过程：有它自身的产生、存在消亡的过程
                          说明：进程作为资源分配的单位，系统在运行时会为每个进程分配不同的内存区域
                          3.程序是静态的，进程的动态的
                          4.线程(thread)进程可以进一步细化为线程，是一个程序内部的一条执行路径
                          ----->若一个进程同一时间并行执行多个线程，就是支持多线程的
                          ----->线程作为调度和执行的单位
                          5.并行：多个cpu同时执行多个任务。
                          6.并发：一个cpu（采用时间片）同时执行多个任务。

    进程可以细化为多个线程。
    每个线程，拥有自己独立的：栈、程序计数器
    多个线程，共享一个进程中的结构：方法区、堆
7.一个java应用程序java.exe。其实至少有三个线程：main（）主线程，
    gc()垃圾回收线程，异常处理线程，当然如果发生异常，会影响主线程
8.多线程程序的优点
    1.提高应用程序的响应，对图形化界面更有意义，可增强用户体验。
    2.提高计算机系统CPU的利用率
    ３.改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和修改

    面试题：sleep() 和 wait()的异同
    1.相同点：一旦执行方法，都可以使得当前线程进入阻塞状态。
    2.不同点：1）两个方法声明的位置不同：Thread类中声明sleep()，Object()类中声明wait()
              2）调用的要求不同：sleep()可以在任何需要的场景下调用。wait()必须使用在同步代码块或同步方法中
              3）关于是否释放同步监视器：如果两个方法都使用在同步代码款或者同步方法中sleep()不会释放锁。wait()会释放锁
9 面试题：String s  = new String("abc");方式创建对象，在内存中创建了几个对象？

       两个：一个是堆空间中new的结构，另一个是char[]对应的常量池中的数据：“abc"

10.String 创建的字符串存储在公共池中，而 new 创建的字符串对象在堆上.
11.栈空间（stack），连续的存储空间，遵循后进先出的原则，用于存放局部变量。
   堆空间（heap），不连续的空间，用于存放new出的对象，或者说是类的实例。
   方法区（method），方法区在堆空间内，用于存放①类的代码信息；②静态变量和方法；③常量池（字符串常量等，具有共享机制）。
   Java中除了基本数据类型，其他的均是引用类型，包括类、数组等等。
   数据类型的默认值
   基本数据类型默认值：
   数值型：0
   浮点型：0.0
   布尔型：false
   字符型：\u0000
   引用类型：null
   变量初始化：
   成员变量可不初始化，系统会自动初始化；
   局部变量必须由程序员显式初始化，系统不会自动初始化。
12.重载(overloading) 是在一个类里面，方法名字相同，而参数不同。返回类型可以相同也可以不同。
   每个重载的方法（或者构造函数）都必须有一个独一无二的参数类型列表。
   最常用的地方就是构造器的重载。

13.多态的作用；
    1.应用程序不必为每个派生类编写功能的调用，只需要对基类进行处理即可。大大提高了程序的可复用性。//继承

14.面试题
1.ArrayList  LinkedList Vector三者的相同点与不同点？
2.HashMap
