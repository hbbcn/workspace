1.程序（program)是为了完成特定的任务、用某种语言编写的一组指令的集合。既指一段静态的代码，静态对象。
2.进程（process）在计算机中，我们把一个任务称为一个进程，。是一个动态的过程：有它自身的产生、存在消亡的过程
类似的，音乐播放器和Word都是进程。
（1）进程是一个动态的概念，而程序是一个静态的概念，程序是指令的有序集合，无执行含义，进程则强调执行的过程；
（2）进程具有并行特征(独立性，异步性)，程序没有；
（3）不同的进程可以包含同一程序，同一程序在执行中也可以产生多个进程
（1）程序是永存的；进程是暂时的，是程序在数据集上的一次执行，有创建有撤销，存在是暂时的；
 （2）程序是静态的观念，进程是动态的观念；
 （3）进程具有并发性，而程序没有；
 （4）进程是竞争计算机资源的基本单位，程序不是
 (3)1个程序可以对应多个进程，但1个进程只能对应1个程序。
它们的本质区别就是进程是动态的，而程序则是静态的。
说明：进程作为资源分配的单位，系统在运行时会为每个进程分配不同的内存区域
3.程序是静态的，进程的动态的
4.线程(thread):进程可以进一步细化为线程，是一个程序内部的一条执行路径它被包含在进程之中，是进程中的实际运作单位。一条线程指的是进程中一个单一顺序的控制流
 ----->若一个进程同一时间并行执行多个线程，就是支持多线程的
 ----->线程作为操作系统调度和运算的最小单位
   在操作系统中允许多个任务，每一个任务就是一个进程，每一个进程也可以同时执行多个任务，每一个任务就是线程。
多线程：多线程指的是在单个程序中可以同时运行多个不同的线程，执行不同的任务
1. 线程是程序执行的最小单位，而进程是操作系统分配资源的最小单位；
2. 一个进程由一个或多个线程组成，线程是一个进程中代码的不同执行路线
3. 进程之间相互独立，但同一进程下的各个线程之间共享程序的内存空间(包括代码段，数据集，堆等)及一些进程级的资源(如打开文件和信
号等)，某进程内的线程在其他进程不可见；
4. 调度和切换：线程上下文切换比进程上下文切换要快得多



 5.并行：
    每个线程，拥有自己独立的：栈、程序计数器多个cpu同时执行多个任务 指两个或多个事件在同一时刻点发生；。
 6.并发：一个cpu（采用时间片）同时执行多个任务。

    进程可以细化为多个线程。
    多个线程，共享一个进程中的结构：方法区、堆
7.一个java应用程序java.exe。其实至少有三个线程：main（）主线程，
    gc()垃圾回收线程，异常处理线程，当然如果发生异常，会影响主线程
8.多线程程序的优点
    1.提高应用程序的响应，对图形化界面更有意义，可增强用户体验。
    2.提高计算机系统CPU的利用率
    3.改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和修改

    面试题：sleep() 和 wait()的异同
    1.相同点：一旦执行方法，都可以使得当前线程进入阻塞状态。
    2.不同点：1）两个方法声明的位置不同：Thread类中声明sleep()，Object()类中声明wait()
              2）调用的要求不同：sleep()可以在任何需要的场景下调用。wait()必须使用在同步代码块或同步方法中
              3）关于是否释放同步监视器：如果两个方法都使用在同步代码款或者同步方法 sleep()不会释放锁，wait()会释放锁
9 面试题：String s  = new String("abc");方式创建对象，在内存中创建了几个对象？

       两个：一个是堆空间中new的结构，另一个是char[]对应的常量池中的数据：“abc"

10.String 创建的字符串存储在公共池中，而 new 创建的字符串对象在堆上.
11.栈空间（stack），连续的存储空间，遵循后进先出的原则，用于存放局部变量。
   堆空间（heap），不连续的空间，用于存放new出的对象，或者说是类的实例。
   方法区（method），方法区在堆空间内，用于存放①类的代码信息；②静态变量和方法；③常量池（字符串常量等，具有共享机制）。
   Java中除了基本数据类型，其他的均是引用类型，包括类、数组等等。
   数据类型的默认值
   基本数据类型默认值：
   数值型：0
   浮点型：0.0
   布尔型：false
   字符型：\u0000
   引用类型：null
   变量初始化：
   成员变量可不初始化，系统会自动初始化；
   局部变量必须由程序员显式初始化，系统不会自动初始化。
12.重载(overloading) 是在一个类里面，方法名字相同，而参数不同。返回类型可以相同也可以不同。
   每个重载的方法（或者构造函数）都必须有一个独一无二的参数类型列表。
   最常用的地方就是构造器的重载。

13.多态的作用；
    1.应用程序不必为每个派生类编写功能的调用，只需要对基类进行处理即可。大大提高了程序的可复用性。//继承

14.面试题
1.ArrayList  LinkedList Vector三者的相同点与不同点？
2.HashMap
