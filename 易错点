一、final在Java中是一个保留的关键字，可以声明成员变量、方法、类以及本地变量。

    一旦你将引用声明作final，你将不能改变这个引用了，编译器会检查代码，如果你试图将变量再次初始化的话，编译器会报编译错误。
1、final修饰变量
　　final成员变量表示常量，只能被赋值一次，赋值后值不再改变（final要求地址值不能改变）
　　当final修饰一个基本数据类型时，表示该基本数据类型的值一旦在初始化后便不能发生变化；
    如果final修饰一个引用类型时，则在对其初始化之后便不能再让其指向其他对象了，但该引用所指向的对象的内容是可以发生变化的。
    本质上是一回事，因为引用的值是一个地址，final要求值，即地址的值不发生变化。
　　final修饰一个成员变量（属性），必须要显示初始化。这里有两种初始化方式，一种是在变量声明的时候初始化；
    第二种方法是在声明变量的时候不赋初值，但是要在这个变量所在的类的所有的构造函数中对这个变量赋初值。
2、final方法
    使用final方法的原因有两个。
    第一个原因是把方法锁定，以防任何继承类修改它的含义，不能被重写；
    第二个原因是效率，final方法比非final方法要快，因为在编译的时候已经静态绑定了，不需要在运行时再动态绑定。
（注：类的private方法会隐式地被指定为final方法）
3、final类
    当用final修饰一个类时，表明这个类不能被继承。
final类中的成员变量可以根据需要设为final，但是要注意final类中的所有成员方法都会被隐式地指定为final方法。
在使用final修饰类的时候，要注意谨慎选择，除非这个类真的在以后不会用来继承或者出于安全的考虑，尽量不要将类设计为final类

二、标识符：在Java中凡是自己可以起名字的地方都叫标识符
    命名规则：
    1、只能包含字母、数字、下划线、$
    2、数字不能开头
    3、不能包含Java的关键字、保留字
    4、标识符没有长度限制；
    5、标识符对大小写敏感。

三、